name: MSVC2022 Qt6.4 Test

on:
  pull_request:
  push:
    branches:
      - gh-actions

jobs:

  build:
    name: cmake build / ctest

    runs-on: windows-2022

    steps:
    - uses: actions/checkout@v3

    - name: TinyORM prepare environment
      run: |
        "TinyRunnerWorkPath=$(Resolve-Path -Path '${{ runner.workspace }}/..')" >> $env:GITHUB_ENV

    - name: MySQL add libmysql.dll on the $env:Path
      run: |
        'C:\mysql\lib' >> $env:GITHUB_PATH

    - name: Qt 6.4.2 install base components
      uses: jurplel/install-qt-action@v3
      with:
        archives: qtbase
        version: 6.4.2
        arch: win64_msvc2019_64
        cache: true
        setup-python: false
        extra: --external 7z.exe
        dir: ${{ env.TinyRunnerWorkPath }}

    - name: Ccache initialize
      id: initialize-ccache-cache
      run: |
        Write-Output '::group::Install'
        choco install ccache -y
        Write-Output '::endgroup::'

        Write-Output '::group::get-config cache_dir'
        $cachePath = ccache.exe --get-config cache_dir
        "CachePath=$cachePath" >> $env:GITHUB_OUTPUT
        Write-Output '::endgroup::'

    - name: Ccache restore cache ðŸ•º
      uses: actions/cache@v3
      with:
        path: ${{ env.cache_path }}
        key: ${{ runner.os }}-ccache-${{ env.cache_name }}-${{ github.run_id }}
        restore-keys: |
          ${{ runner.os }}-ccache-${{ env.cache_name }}-
      env:
        cache_name: msvc2022-qt64-test
        cache_path: ${{ steps.initialize-ccache-cache.outputs.CachePath }}

    - name: Ccache setup ðŸ¥³
      run: |
        Write-Output '::group::Prepare ccache config'
        ccache.exe --set-config compression=false
        ccache.exe --set-config max_size=600M
        ccache.exe --show-config
        Write-Output '::endgroup::'

        Write-Output '::group::Clear ccache statistics'
        ccache.exe --zero-stats
        Write-Output '::endgroup::'

    - name: vcpkg set-up environment
      run: |
        "VCPKG_ROOT=${env:VCPKG_INSTALLATION_ROOT}" >> $env:GITHUB_ENV
        'VCPKG_DEFAULT_TRIPLET=x64-windows' >> $env:GITHUB_ENV
        'VCPKG_MAX_CONCURRENCY=2' >> $env:GITHUB_ENV

    - name: Visual Studio 2022 pwsh shell setup
      uses: egor-tensin/vs-shell@v2
      with:
        arch: x64

    - name: TinyORM create build folder (msvc-cmake-debug)
      run: |
        New-Item -Type Directory '../TinyORM-builds-cmake/build-msvc-cmake-debug'

    - name: TinyORM cmake configure (msvc-cmake-debug)
      run: >-
        cmake
        -S .
        -B ../TinyORM-builds-cmake/build-msvc-cmake-debug
        -G Ninja
        -D CMAKE_TOOLCHAIN_FILE:FILEPATH="${env:VCPKG_INSTALLATION_ROOT}/scripts/buildsystems/vcpkg.cmake"
        -D CMAKE_DISABLE_PRECOMPILE_HEADERS:BOOL=ON
        -D CMAKE_BUILD_TYPE:BOOL=Debug
        -D VERBOSE_CONFIGURE:BOOL=ON
        -D MATCH_EQUAL_EXPORTED_BUILDTREE:BOOL=OFF
        -D MYSQL_PING:BOOL=ON
        -D BUILD_TESTS:BOOL=OFF
        -D ORM:BOOL=ON
        -D TOM:BOOL=ON
        -D TOM_EXAMPLE:BOOL=ON

    - name: TinyORM cmake build âœ¨ (msvc-cmake-debug)
      run: |
        cmake --build ../TinyORM-builds-cmake/build-msvc-cmake-debug --target all --parallel 2

    - name: Ccache statistics
      run: |
        ccache.exe --show-stats -vv
