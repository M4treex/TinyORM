#pragma once
#ifndef ORM_VERSION_HPP
#define ORM_VERSION_HPP

#define TINYORM_VERSION_MAJOR @TinyOrm_VERSION_MAJOR@
#define TINYORM_VERSION_MINOR @TinyOrm_VERSION_MINOR@
#define TINYORM_VERSION_BUGFIX @TinyOrm_VERSION_PATCH@
#define TINYORM_VERSION_BUILD @TinyOrm_VERSION_TWEAK@
#define TINYORM_VERSION_STATUS ""  // Should be empty for stable releases!

#define TINYORM__STRINGIFY(x) #x
#define TINYORM_STRINGIFY(x) TINYORM__STRINGIFY(x)

#if TINYORM_VERSION_BUILD != 0
#  define TINYORM_PROJECT_VERSION TINYORM_STRINGIFY(\
     TINYORM_VERSION_MAJOR.TINYORM_VERSION_MINOR.TINYORM_VERSION_BUGFIX.TINYORM_VERSION_BUILD\
   ) TINYORM_VERSION_STATUS
#else
#  define TINYORM_PROJECT_VERSION TINYORM_STRINGIFY(\
     TINYORM_VERSION_MAJOR.TINYORM_VERSION_MINOR.TINYORM_VERSION_BUGFIX) TINYORM_VERSION_STATUS
#endif

// Versions Legend - M = Major, m = minor, p = patch, t = tweak, s = status

// Format - M.m.p.t-s
#define TINYORM_VERSION TINYORM_PROJECT_VERSION
// Format - vM.m.p.t-s
#define TINYORM_VERSION_2 "v" TINYORM_PROJECT_VERSION

/*! Version number macro, can be used to check API compatibility, format - MMmmpp. */
#define TINYORM_VERSION_NUM \
    (TINYORM_VERSION_MAJOR * 10000 + TINYORM_VERSION_MINOR * 100 + TINYORM_VERSION_BUGFIX)

#endif // ORM_VERSION_HPP
